version: '3.8'

services:
  invexqr:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://invexqr_user:invexqr2025q@invexqr-postgres:5432/invexqr
      - VITE_FIREBASE_API_KEY=AIzaSyAEdlkepge2d3SnlLrpEoJkqv8PAjISfVA
      - VITE_FIREBASE_APP_ID=invextrack-a1001
      - VITE_FIREBASE_PROJECT_ID=1:746716963518:web:0faf49c4b09299ba2a74ef
      - SESSION_SECRET=I$yXqM7ZfR3!Tq1cWopE8Azz0m2YBkPv
      - REPLIT_DOMAINS=localhost        # ✅ Ajouté pour éviter l'erreur dans index.js
    depends_on:
      - invexqr-postgres               # ✅ S'assurer que PostgreSQL est prêt (si dans le même compose)
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - logs:/app/logs
    networks:
      - invexqr-network

  invexqr-postgres:                    # ✅ Ajout de la base de données dans ce fichier, ou connecte-la via nom de réseau
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: 'invexqr'
      POSTGRES_USER: 'invexqr_user'
      POSTGRES_PASSWORD: 'invexqr2025q'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - invexqr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U invexqr_user -d invexqr"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  logs:
  postgres_data:

networks:
  invexqr-network:
    driver: bridge
